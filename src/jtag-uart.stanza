#use-added-syntax(jitx)
defpackage jitx-fpga/jtag-uart :
  import core
  import collections

  import jitx
  import jitx/commands
  import jsl/bundles
  import ocdb/utils/generic-components

  import FTDI/components/FT2232HL

public pcb-module module :
  ;Port definitions.
  port n3V3 : pin
  port usb-5V0 : pin
  port gnd : pin
  port usb-d-n : pin
  port usb-d-p : pin
  port jtag-uart-id : pin
  port jtag-tck-3v3 : pin
  port jtag-tdi-3v3 : pin
  port jtag-tdo-3v3 : pin
  port jtag-tms-3v3 : pin
  port uart-rx-3v3 : pin
  port uart-tx-3v3 : pin
  port por-n-3v3 : pin
  port srst-n-3v3 : pin
  port pwren-n : pin

  ;FT2232 jtag controller.
  inst ft2232 : FTDI/components/FT2232HL/device(FT2232H-MPSSE, FT2232H-RS232, use-internal-1v8 = true)

  ;Creating the 3V3_PHY rail.
  net n3V3_phy ()
  inst fb0 : database-part(["mpn" => "MMZ1005D220CTD25", "manufacturer" => "TDK Corp"])
  net (fb0.p[1], n3V3)
  net (fb0.p[2], n3V3_phy)
  cap-strap(n3V3_phy, gnd, 4.7e-6)
  cap-strap(n3V3_phy, gnd, 100.0e-9)

  ;Creating the 3V3_PLL rail.
  net n3V3_pll ()
  inst fb1 : database-part(["mpn" => "MMZ1005D220CTD25", "manufacturer" => "TDK Corp"])
  net (fb1.p[1], n3V3)
  net (fb1.p[2], n3V3_pll)
  cap-strap(n3V3_pll, gnd, 4.7e-6)
  cap-strap(n3V3_pll, gnd, 100.0e-9)

  ;Voltage protection diodes.
  inst diodes: jitx-fpga/components/CDSOT23-SR208/component
  net (diodes.IO3, usb-d-p)
  net (diodes.IO2, usb-d-n)
  net (diodes.REF2, gnd)
  net (diodes.REF1, usb-5V0)
  net (diodes.IO4, jtag-uart-id)
  no-connect(diodes.IO1)

  ;EEProm for configuring controller.
  inst eeprom : database-part(["mpn" => "93LC56B-I/SN", "manufacturer" => "Microchip"])

  net (n3V3, eeprom.VCC)
  net (gnd, eeprom.VSS)
  res-strap(eeprom.DI, n3V3, 10.0e3)
  res-strap(eeprom.CLK, n3V3, 10.0e3)
  res-strap(eeprom.CS, n3V3, 10.0e3)  
  cap-strap(eeprom.VCC, gnd, 100.0e-9)

  ;Connections between EEProm and FT2232
  net (eeprom.DI, ft2232.cfg.data)
  res-strap(eeprom.DO, ft2232.cfg.data, 2.0e3)
  res-strap(eeprom.CLK, ft2232.cfg.clk, 22.1)
  net (eeprom.CS, ft2232.cfg.cs)

  ;Crystal oscillator for controller.
  inst crystal : database-part(["mpn" => "ECS-120-10-33B-CKM-TR", "manufacturer" => "ECS"])
  net (crystal.In_Out, ft2232.C.OSCI)
  net (crystal.Out_In, ft2232.C.OSCO)
  net (gnd, crystal.Gnd0, crystal.Gnd1)
  cap-strap(crystal.In_Out, gnd, 18.0e-12)
  cap-strap(crystal.Out_In, gnd, 18.0e-12)

  ;Power for FT2232
  net (n3V3_phy, ft2232.VPHY.V+)
  net (n3V3_pll, ft2232.VPLL.V+)
  net (n3V3, ft2232.VCCIO.V+)
  net (gnd, ft2232.GND)

  ;Port connections
  net (usb-d-n, ft2232.USB.data.N)
  net (usb-d-p, ft2232.USB.data.P)

  require ft2232-jtag:jtag from ft2232
  res-strap(jtag-tck-3v3, ft2232-jtag.tck, 22.1)
  res-strap(jtag-tdi-3v3, ft2232-jtag.tdi, 22.1)
  res-strap(jtag-tdo-3v3, ft2232-jtag.tdo, 22.1)
  res-strap(jtag-tms-3v3, ft2232-jtag.tms, 22.1)

  require ft2232-gpio:gpio[2] from ft2232
  res-strap(por-n-3v3, ft2232-gpio[0].gpio, 0.0)
  res-strap(srst-n-3v3, ft2232-gpio[1].gpio, 0.0)

  require ft2232-uart:uart-fc() from ft2232
  net (uart-rx-3v3, ft2232-uart.tx)
  net (uart-tx-3v3, ft2232-uart.rx)
  net (pwren-n, ft2232.C.PWREN_n)

  ;Decoupling caps for n3V3
  cap-strap(n3V3, gnd, 100.0e-9)
  cap-strap(n3V3, gnd, 100.0e-9)
  cap-strap(n3V3, gnd, 100.0e-9)
  cap-strap(n3V3, gnd, 100.0e-9)

  ;Pullups and pulldowns
  res-strap(ft2232.C.ADBUS[4], n3V3, 4.75e3)
  res-strap(ft2232.C.RESET_n, n3V3, 0.0)

  ;Unused test pin.
  res-strap(ft2232.C.TEST, gnd, 0.0)

  ;Explicit net names and symbols.
  let :
    net n3V3 (n3V3)
    net usb-5V0 (usb-5V0)
    net gnd (gnd)
    net usb-d-n (usb-d-n)
    net usb-d-p (usb-d-p)
    net jtag-uart-id (jtag-uart-id)
    net jtag-tck-3v3 (jtag-tck-3v3)
    net jtag-tdi-3v3 (jtag-tdi-3v3)
    net jtag-tdo-3v3 (jtag-tdo-3v3)
    net jtag-tms-3v3 (jtag-tms-3v3)
    net uart-rx-3v3 (uart-rx-3v3)
    net uart-tx-3v3 (uart-tx-3v3)
    net por-n-3v3 (por-n-3v3)
    net srst-n-3v3 (srst-n-3v3)
    net pwren-n (pwren-n)
    symbol(usb-5V0) = ocdb/utils/symbols/supply-sym
    symbol(n3V3) = ocdb/utils/symbols/supply-sym
    symbol(n3V3_phy) = ocdb/utils/symbols/supply-sym
    symbol(n3V3_pll) = ocdb/utils/symbols/supply-sym
    symbol(gnd) = ocdb/utils/symbols/ground-sym
