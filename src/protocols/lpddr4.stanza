doc: \<DOC>
@brief LPDDR4

LPDDR4 is a point-to-point high speed memory protocol
@see https://en.wikipedia.org/wiki/LPDDR

This file contains functions and definitions for supporting LPDDR4
connections between microprocessors and memories in a board design.
<DOC>

#use-added-syntax(jitx)
defpackage jitx-fpga/protocols/lpddr4 :
  import core
  import collections

  import jitx
  import jitx/commands

  import jsl/bundles
  import jsl/errors
  import jsl/ensure
  import jsl/si
  import jsl/pin-assignment

;============================================================
;========================= Bundles ==========================
;============================================================

public pcb-bundle lpddr4-lane :
  port dq : pin[8]
  port dqs : diff-pair
  port dmi : pin

public pcb-bundle lpddr4-x16 :
  port d : lpddr4-lane[2]
  port ck : diff-pair
  port cke : pin
  port cs : pin
  port ca : pin[6]

public pcb-bundle lpddr4-dual-x16 :
  port ch : lpddr4-x16[2]

;============================================================
;===================== Signal Integrity =====================
;============================================================

doc: \<DOC>
LPDDR4 SI Constraint Type

Constraints:
  CK Intra-pair Skew => 0.0 +/- 1.0e-12 seconds
  CK to CKE Skew => 0.0 +/- 3.5e-12 seconds
  CK to CS Skew => 0.0 +/- 3.5e-12 seconds
  CK to CA Skew => 0.0 +/- 3.5e-12 seconds
  CK to DQS Skew => 0.0 +/- 75.0e-12 seconds
  DQS Intra-pair Skew => 0.0 +/- 1.0e-12 seconds
  DQS to DQ Skew => 0.0 +/- 3.5e-12 seconds
  DQS to DMI Skew => 0.0 +/- 3.5e-12 seconds
  Maximum Signal Loss => 5.0 dB
<DOC>
public defstruct LPDDR4-Constraint <: SI-Constraint :
  doc: \<DOC>
  CK Intra-pair Skew Limit
  <DOC>
  skew-ck:Toleranced with :
    default => 0.0 +/- 1.0e-12

  doc: \<DOC>
  CK to DQS Skew Limit
  <DOC>
  skew-ck-dqs:Toleranced with :
    default => 0.0 +/- 75.0e-12

  doc: \<DOC>
  CK to CKE Skew Limit
  <DOC>
  skew-ck-cke:Toleranced with :
    default => 0.0 +/- 3.5e-12

  doc: \<DOC>
  CK to CS Skew Limit
  <DOC>
  skew-ck-cs:Toleranced with :
    default => 0.0 +/- 3.5e-12

  doc: \<DOC>
  CK to CA Skew Limit
  <DOC>
  skew-ck-ca:Toleranced with :
    default => 0.0 +/- 3.5e-12

  doc: \<DOC>
  DQS Intra-pair Skew Limit
  <DOC>
  skew-dqs:Toleranced with :
    default => 0.0 +/- 1.0e-12

  doc: \<DOC>
  DQS to DQ Skew Limit
  <DOC>
  skew-dqs-dq:Toleranced with :
    default => 0.0 +/- 3.5e-12

  doc: \<DOC>
  DQS to DMI Skew Limit
  <DOC>
  skew-dqs-dmi:Toleranced with :
    default => 0.0 +/- 3.5e-12

  doc: \<DOC>
  Maximum Signal Loss
  <DOC>
  loss:Double with:
    ensure => ensure-positive!,
    default => 5.0

  doc: \<DOC>
  Differential Pair Routing Structure
  <DOC>
  diff-route-struct:DifferentialRoutingStructure

  doc: \<DOC>
  Single-Ended Routing Structure
  <DOC>
  se-route-struct:RoutingStructure
with:
  keyword-constructor => true

public defn LPDDR4-Constraint (diff-st:DifferentialRoutingStructure,
                               se-st:RoutingStructure) -> LPDDR4-Constraint :
  LPDDR4-Constraint(diff-route-struct = diff-st, se-route-struct = se-st)

doc: \<DOC>
Add constraints to a LPDDR4 link

@param cst Constraint Object
@param src Source End Point - must be of `lpddr4-dual-x16` type
@param dst Destination End Point - must be of `lpddr4-dual-x16` type
<DOC>
public defmethod constrain (cst:LPDDR4-Constraint, src:JITXObject, dst:JITXObject) -> False :
  inside pcb-module :
    val ck-const = DiffPair-Constraint(skew = skew-ck(cst), loss = loss(cst), route-struct = diff-route-struct(cst))
    val dqs-const = DiffPair-Constraint(skew = skew-dqs(cst), loss = loss(cst), route-struct = diff-route-struct(cst))

    for i in 0 to 2 do :
      diffpair-constrain(ck-const, src.ch[i].ck, dst.ch[i].ck)
      val guide-ck = src.ch[i].ck.P => dst.ch[i].ck.P

      val target-cke = src.ch[i].cke => dst.ch[i].cke
      timing-window(skew-ck-cke(cst), guide-ck, target-cke)
      structure(target-cke) = se-route-struct(cst)
      max-loss(loss(cst), target-cke)

      val target-cs = src.ch[i].cs => dst.ch[i].cs
      timing-window(skew-ck-cs(cst), guide-ck, target-cs)
      structure(target-cs) = se-route-struct(cst)
      max-loss(loss(cst), target-cs)

      for j in 0 to 6 do :
        val target-ca = src.ch[i].ca[j] => dst.ch[i].ca[j]
        timing-window(skew-ck-ca(cst), guide-ck, target-ca)
        structure(target-ca) = se-route-struct(cst)
        max-loss(loss(cst), target-ca)

      for j in 0 to 2 do :
        diffpair-constrain(dqs-const, src.ch[i].d[j].dqs, dst.ch[i].d[j].dqs)
        val guide-dqs = src.ch[i].d[j].dqs.P => dst.ch[i].d[j].dqs.P
        timing-window(skew-ck-dqs(cst), guide-ck, guide-dqs)

        for k in 0 to 8 do :
          val target-dq = src.ch[i].d[j].dq[k] => dst.ch[i].d[j].dq[k]
          timing-window(skew-dqs-dq(cst), guide-dqs, target-dq)
          structure(target-dq) = se-route-struct(cst)
          max-loss(loss(cst), target-dq)

        val target-dmi = src.ch[i].d[j].dmi => dst.ch[i].d[j].dmi
        timing-window(skew-dqs-dmi(cst), guide-dqs, target-dmi)
        structure(target-dmi) = se-route-struct(cst)
        max-loss(loss(cst), target-dmi)

public defn connect-LPDDR4 (src:JITXObject, dst:JITXObject,
                            diff-rs:DifferentialRoutingStructure,
                            rs:RoutingStructure) :
  inside pcb-module :
    val cst = LPDDR4-Constraint(diff-rs, rs)
    constrain-topology(src, dst, cst)
